// Apex Unit Test exercise 1: Testing a DML operation
//
// *NOTE* DML opeartions performed in a APEX test class are temporary
//
// The following class creates an Apex trigger that prevents Account objects that have a related
// Opportunity from being delete. The class below it is the Apex unit testing class that tests
// to see if the trigger functions correctly. 

// [Trigger Class]
trigger AccountDeletion on Account (before delete) {
    List<Account> acctList = [SELECT Id FROM Account
                     		  WHERE Id IN (SELECT AccountId FROM Opportunity) AND
                     		  Id IN :Trigger.old];
    // Prevents the deletion of accounts if they have related opportunities.
    for (Account acct : acctList) {
        Trigger.oldMap.get(acct.Id).addError(
            'Cannot delete account with related opportunities.');
    }
} // AccountDeletion

// [Test Class]
// This class tests whether an Account object with a related opporunity is prevented from being deleted
@isTest
public class TestAccountDeletion {
    @isTest static void TestDeleteAccountWithOneOpporunity() {
    	Account acct = new Account(Name='ToysRus');
        // Insert here so that the Account can have an Id
	insert acct; 
    	Opportunity opp = new Opportunity(Name = acct.name + ' Opportunity',
                	    			Stagename = 'Prospecting',
                    				CloseDate = System.today().addMonths(1),
                    				AccountId = acct.Id);
    	
      	insert opp;    
        
     	// Testing the opperation
      	Test.startTest();
	Database.DeleteResult result = Database.delete(acct, false);
	Test.stopTest();
        
     	// Verify- The test should fail because deletion was performed witht
     	// an account that had a related opportunity.
      	System.assert(!result.isSuccess()); // the operation should fail
      	System.assert(result.getErrors().size() > 0);
      	System.assertEquals('Cannot delete account with related opportunities.',
                            result.getErrors()[0].getMessage());
    }   // TestDeleteAccountWithOneOpportunity
} // TestAccountDeletion
